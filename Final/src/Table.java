import javax.swing.*;
import javax.swing.table.*;

public class Table {
	public static void main(String args[]){
	      JFrame frame = new JFrame();
	      JTable table = new JTable(new MyTableModel());
	 
	      frame.add(table);
	      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	      frame.setSize(600,600);
	      frame.setLocationRelativeTo(null);  
	      frame.setVisible(true);
	   }
	
}

class MyTableModel extends AbstractTableModel {
	   /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	String[] columnNames = {"state","+","-","*","(",")","{","}","[","]",";",",",".",":","=",">","<","e","L","0","N","_","inv","/","whitespace","newline","endoffile","final","backtrack"};
	 
	      Object[][] data = {
	       {"state","+","-","*","(",")","{","}","[","]",";",",",".",":","=",">","<","e","L","0","N","_","inv","/","whitespace","newline","endoffile","final","backtrack"},	  
	       {1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,21,24,29,29,40,41,31,31,32,1,1,28,null,null},
	       {2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"plus",null},
	       {3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"minus",null},
	       {4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"mult",null},
	       {5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"lpar",null},
	       {6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"rpar",null},
	       {7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"lcurbr",null},
	       {8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"rcurbr",null},
	       {9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"lsqbr",null},
	       {10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"rsqbr",null},
	       {11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"semi",null},
	       {12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"comma",null},
	       {13,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"dot",null},
	       {14,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,null,null},
	       {15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"sr",null},
	       {16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"colon","yes"},
	       {17,19,19,19,19,19,19,19,19,19,19,19,19,19,18,20,19,19,19,19,19,19,19,19,19,19,19,null,null},
	       {18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"eq",null},
	       {19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"equal","yes"},
	       {20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"arrow",null},
	       {21,23,23,23,23,23,23,23,23,23,23,23,23,23,22,23,23,23,23,23,23,23,23,23,23,23,23,null,null},
	       {22,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"geq",null},
	       {23,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"gt","yes"},
	       {24,26,26,26,26,26,26,26,26,26,26,26,26,26,25,27,26,26,26,26,26,26,26,26,26,26,26,null,null},
	       {25,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"leq",null},
	       {26,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"lt","yes"},
	       {27,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"neq",null},
	       {28,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"end",null},
	       {29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,29,29,29,29,29,30,30,30,30,30,null,null},
	       {30,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"id","yes"},
	       {31,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"invalidchar",null},
	       {32,33,33,36,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,33,33,33,null,null},
	       {33,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"div","yes"},
	       {34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,null,null},
	       {35,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"inlinecmt",null},
	       {36,36,36,37,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,39,null,null},
	       {37,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,38,36,36,39,null,null},
	       {38,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"blockcmt",null},
	       {39,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"untermerr",null},
	       {40,42,42,42,42,42,42,42,42,42,42,42,43,42,42,42,42,42,42,42,42,42,42,42,42,42,42,null,null},
	       {41,42,42,42,42,42,42,42,42,42,42,42,43,42,42,42,42,42,42,41,41,42,42,42,42,42,42,null,null},
	       {42,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"intlit","yes"},
	       {43,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,45,44,49,49,49,49,49,49,null,null},
	       {44,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,50,47,46,44,47,47,47,47,47,47,null,null},
	       {45,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,50,47,46,44,47,47,47,47,47,47,null,null},
	       {46,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,48,46,44,48,48,48,48,48,48,null,null},
	       {47,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"floatlit","yes"},
	       {48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"invalidnum","yes"},
	       {49,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,"intlit",null},
	       {50,54,54,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,51,53,48,48,48,48,48,48,null,null},
	       {51,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,52,52,47,47,47,47,47,47,null,null},
	       {52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,52,52,48,48,48,48,48,48,null,null},
	       {53,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,55,55,47,47,47,47,47,47,null,null},
	       {54,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,51,55,48,48,48,48,48,48,null,null},
	       {55,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,55,55,47,47,47,47,47,47,null,null},
	       {56,57,57,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,58,58,48,48,48,48,48,48,null,null},
	       {57,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,58,58,48,48,48,48,48,48,null,null},
	       {58,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,58,58,48,48,48,48,48,48,null,null},
	   };
	 
	   public int getRowCount() {
	       return data.length;
	   }
	 
	   public int getColumnCount() {
	       return columnNames.length;
	   }
	   
	   public int findColumn(String s) {
		   for (int i=0; i < columnNames.length;i++) {
			   if (s.equals(columnNames[i])) {
				   return i;
			   }
		   }
		   return -1;
	   }
	  
	   public Object getValueAt(int row, int col) {
	       return data[row][col];
	   }
	 
	}
