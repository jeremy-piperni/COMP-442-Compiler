[blockcmt, /*1.1Allocatememoryforbasictypes(integer,float).1.2Allocatememoryforarraysofbasictypes.1.3Allocatememoryforobjects.1.4Allocatememoryforarraysofobjects.2.1Branchtoafunction’scodeblock,executethecodeblock,branchbacktothecallingfunction.2.2Passparametersaslocalvaluestothefunction’scodeblock.2.3Uponexecutionofareturnstatement,passthereturnvaluebacktothecallingfunction.2.4Calltomemberfunctionsthatcanusetheirobject’sdatamembers.3.1Assignmentstatement:assignmentoftheresultingvalueofanexpressiontoavariable,independentlyofwhatistheexpressiontotherightoftheassignmentoperator.3.2Conditionalstatement:implementationofabranchingmechanism.3.3Loopstatement:implementationofabranchingmechanism.3.4Input/outputstatement:Moonmachinekeyboardinput/consoleoutput4.1.Forarraysofbasictypes(integerandfloat),accesstoanarray’selements.4.2.Forarraysofobjects,accesstoanarray’selement’sdatamembers.4.3.Forobjects,accesstomembersofbasictypes.4.4.Forobjects,accesstomembersofarrayorobjecttypes.5.1.Computingthevalueofanentirecomplexexpression.5.2.Expressioninvolvinganarrayfactorwhoseindexesarethemselvesexpressions.5.3.Expressioninvolvinganobjectfactorreferringtoobjectmembers.*/, 21]
[inlinecmt, //Assignment5coverage:, 23]
[inlinecmt, //-------------, 24]
[inlinecmt, //|YES|NO|, 25]
[inlinecmt, //-------------, 26]
[inlinecmt, //1.1:|X||, 27]
[inlinecmt, //1.2:||X|, 28]
[inlinecmt, //1.3:||X|, 29]
[inlinecmt, //1.4:||X|, 30]
[inlinecmt, //2.1:||X|, 31]
[inlinecmt, //2.2:||X|, 32]
[inlinecmt, //2.3:||X|, 33]
[inlinecmt, //2.4:||X|, 34]
[inlinecmt, //3.1:|X||, 35]
[inlinecmt, //3.2:|X||, 36]
[inlinecmt, //3.3:|X||, 37]
[inlinecmt, //3.4:|X||, 38]
[inlinecmt, //4.1:||X|, 39]
[inlinecmt, //4.2:||X|, 40]
[inlinecmt, //4.3:||X|, 41]
[inlinecmt, //4.4:||X|, 42]
[inlinecmt, //5.1:|X||, 43]
[inlinecmt, //5.2:||X|, 44]
[inlinecmt, //5.3:||X|, 45]
[inlinecmt, //-------------, 46]
[function, function, 48]
[id, main, 48]
[lpar, (, 48]
[rpar, ), 48]
[arrow, =>, 48]
[void, void, 48]
[lcurbr, {, 49]
[localvar, localvar, 50]
[id, x, 50]
[colon, :, 50]
[integer, integer, 50]
[semi, ;, 50]
[inlinecmt, //1.1, 50]
[localvar, localvar, 51]
[id, y, 51]
[colon, :, 51]
[integer, integer, 51]
[semi, ;, 51]
[inlinecmt, //1.1, 51]
[localvar, localvar, 52]
[id, z, 52]
[colon, :, 52]
[integer, integer, 52]
[semi, ;, 52]
[inlinecmt, //1.1, 52]
[id, y, 53]
[equal, =, 53]
[intlit, 1, 53]
[plus, +, 53]
[intlit, 2, 53]
[mult, *, 53]
[intlit, 3, 53]
[semi, ;, 53]
[inlinecmt, //3.1,5.1, 53]
[read, read, 54]
[lpar, (, 54]
[id, x, 54]
[rpar, ), 54]
[semi, ;, 54]
[inlinecmt, //3.4, 54]
[if, if, 55]
[lpar, (, 55]
[id, x, 55]
[gt, >, 55]
[id, y, 55]
[plus, +, 55]
[intlit, 10, 55]
[rpar, ), 55]
[inlinecmt, //3.2,5.1, 55]
[then, then, 56]
[write, write, 57]
[lpar, (, 57]
[id, x, 57]
[plus, +, 57]
[intlit, 10, 57]
[rpar, ), 57]
[semi, ;, 57]
[inlinecmt, //3.4,5.1, 57]
[else, else, 58]
[write, write, 59]
[lpar, (, 59]
[id, x, 59]
[plus, +, 59]
[intlit, 1, 59]
[rpar, ), 59]
[semi, ;, 59]
[inlinecmt, //3.4,5.1, 59]
[semi, ;, 60]
[id, z, 61]
[equal, =, 61]
[intlit, 0, 61]
[semi, ;, 61]
[inlinecmt, //3.1, 61]
[while, while, 62]
[lpar, (, 62]
[id, z, 62]
[leq, <=, 62]
[intlit, 10, 62]
[rpar, ), 62]
[lcurbr, {, 62]
[inlinecmt, //3.3,5.1, 62]
[write, write, 63]
[lpar, (, 63]
[id, z, 63]
[rpar, ), 63]
[semi, ;, 63]
[inlinecmt, //3.4, 63]
[id, z, 64]
[equal, =, 64]
[id, z, 64]
[plus, +, 64]
[intlit, 1, 64]
[semi, ;, 64]
[inlinecmt, //3.1, 64]
[rcurbr, }, 65]
[semi, ;, 65]
[rcurbr, }, 66]
