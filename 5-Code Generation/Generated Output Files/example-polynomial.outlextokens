[blockcmt, /*1.1Allocatememoryforbasictypes(integer,float).1.2Allocatememoryforarraysofbasictypes.1.3Allocatememoryforobjects.1.4Allocatememoryforarraysofobjects.2.1Branchtoafunction’scodeblock,executethecodeblock,branchbacktothecallingfunction.2.2Passparametersaslocalvaluestothefunction’scodeblock.2.3Uponexecutionofareturnstatement,passthereturnvaluebacktothecallingfunction.2.4Calltomemberfunctionsthatcanusetheirobject’sdatamembers.3.1Assignmentstatement:assignmentoftheresultingvalueofanexpressiontoavariable,independentlyofwhatistheexpressiontotherightoftheassignmentoperator.3.2Conditionalstatement:implementationofabranchingmechanism.3.3Loopstatement:implementationofabranchingmechanism.3.4Input/outputstatement:Moonmachinekeyboardinput/consoleoutput4.1.Forarraysofbasictypes(integerandfloat),accesstoanarray’selements.4.2.Forarraysofobjects,accesstoanarray’selement’sdatamembers.4.3.Forobjects,accesstomembersofbasictypes.4.4.Forobjects,accesstomembersofarrayorobjecttypes.5.1.Computingthevalueofanentirecomplexexpression.5.2.Expressioninvolvinganarrayfactorwhoseindexesarethemselvesexpressions.5.3.Expressioninvolvinganobjectfactorreferringtoobjectmembers.*/, 21]
[inlinecmt, //Assignment5coverage:, 23]
[inlinecmt, //-------------, 24]
[inlinecmt, //|YES|NO|, 25]
[inlinecmt, //-------------, 26]
[inlinecmt, //1.1:|X||, 27]
[inlinecmt, //1.2:|X||, 28]
[inlinecmt, //1.3:|X||, 29]
[inlinecmt, //1.4:||X|, 30]
[inlinecmt, //2.1:|X||, 31]
[inlinecmt, //2.2:|X||, 32]
[inlinecmt, //2.3:|X||, 33]
[inlinecmt, //2.4:|X||, 34]
[inlinecmt, //3.1:|X||, 35]
[inlinecmt, //3.2:|X||, 36]
[inlinecmt, //3.3:|X||, 37]
[inlinecmt, //3.4:|X||, 38]
[inlinecmt, //4.1:||X|, 39]
[inlinecmt, //4.2:||X|, 40]
[inlinecmt, //4.3:|X||, 41]
[inlinecmt, //4.4:|X||, 42]
[inlinecmt, //5.1:|X||, 43]
[inlinecmt, //5.2:||X|, 44]
[inlinecmt, //5.3:|X||, 45]
[inlinecmt, //-------------, 46]
[inlinecmt, //======structdeclarations======//, 48]
[class, class, 49]
[id, POLYNOMIAL, 49]
[lcurbr, {, 49]
[public, public, 50]
[function, function, 50]
[id, evaluate, 50]
[colon, :, 50]
[lpar, (, 50]
[id, x, 50]
[colon, :, 50]
[float, float, 50]
[rpar, ), 50]
[arrow, =>, 50]
[float, float, 50]
[semi, ;, 50]
[rcurbr, }, 51]
[semi, ;, 51]
[class, class, 53]
[id, LINEAR, 53]
[isa, isa, 53]
[id, POLYNOMIAL, 53]
[lcurbr, {, 53]
[private, private, 54]
[attribute, attribute, 54]
[id, a, 54]
[colon, :, 54]
[float, float, 54]
[semi, ;, 54]
[private, private, 55]
[attribute, attribute, 55]
[id, b, 55]
[colon, :, 55]
[float, float, 55]
[semi, ;, 55]
[public, public, 56]
[constructor, constructor, 56]
[colon, :, 56]
[lpar, (, 56]
[id, A, 56]
[colon, :, 56]
[float, float, 56]
[comma, ,, 56]
[id, B, 56]
[colon, :, 56]
[float, float, 56]
[rpar, ), 56]
[semi, ;, 56]
[public, public, 57]
[function, function, 57]
[id, evaluate, 57]
[colon, :, 57]
[lpar, (, 57]
[id, x, 57]
[colon, :, 57]
[float, float, 57]
[rpar, ), 57]
[arrow, =>, 57]
[float, float, 57]
[semi, ;, 57]
[rcurbr, }, 58]
[semi, ;, 58]
[class, class, 60]
[id, QUADRATIC, 60]
[isa, isa, 60]
[id, POLYNOMIAL, 60]
[lcurbr, {, 60]
[private, private, 61]
[attribute, attribute, 61]
[id, a, 61]
[colon, :, 61]
[float, float, 61]
[semi, ;, 61]
[private, private, 62]
[attribute, attribute, 62]
[id, b, 62]
[colon, :, 62]
[float, float, 62]
[semi, ;, 62]
[private, private, 63]
[attribute, attribute, 63]
[id, c, 63]
[colon, :, 63]
[float, float, 63]
[semi, ;, 63]
[public, public, 64]
[constructor, constructor, 64]
[colon, :, 64]
[lpar, (, 64]
[id, A, 64]
[colon, :, 64]
[float, float, 64]
[comma, ,, 64]
[id, B, 64]
[colon, :, 64]
[float, float, 64]
[comma, ,, 64]
[id, C, 64]
[colon, :, 64]
[float, float, 64]
[rpar, ), 64]
[semi, ;, 64]
[public, public, 65]
[function, function, 65]
[id, evaluate, 65]
[colon, :, 65]
[lpar, (, 65]
[id, x, 65]
[colon, :, 65]
[float, float, 65]
[rpar, ), 65]
[arrow, =>, 65]
[float, float, 65]
[semi, ;, 65]
[rcurbr, }, 66]
[semi, ;, 66]
[inlinecmt, //======memberfunctionimplementations======//, 68]
[inlinecmt, //2.1,2.2, 69]
[function, function, 70]
[id, POLYNOMIAL, 70]
[sr, ::, 70]
[id, evaluate, 70]
[lpar, (, 70]
[id, x, 70]
[colon, :, 70]
[float, float, 70]
[rpar, ), 70]
[arrow, =>, 70]
[float, float, 70]
[lcurbr, {, 71]
[return, return, 72]
[lpar, (, 72]
[floatlit, 0.0, 72]
[rpar, ), 72]
[semi, ;, 72]
[inlinecmt, //2.3, 72]
[rcurbr, }, 73]
[function, function, 75]
[id, QUADRATIC, 75]
[sr, ::, 75]
[id, evaluate, 75]
[lpar, (, 75]
[id, x, 75]
[colon, :, 75]
[float, float, 75]
[rpar, ), 75]
[arrow, =>, 75]
[float, float, 75]
[lcurbr, {, 76]
[localvar, localvar, 77]
[id, result, 77]
[colon, :, 77]
[float, float, 77]
[semi, ;, 77]
[inlinecmt, //1.1, 77]
[inlinecmt, //UsingHorner'smethod, 78]
[id, result, 79]
[equal, =, 79]
[id, a, 79]
[semi, ;, 79]
[inlinecmt, //3.1, 79]
[id, result, 80]
[equal, =, 80]
[id, result, 80]
[mult, *, 80]
[id, x, 80]
[plus, +, 80]
[id, b, 80]
[semi, ;, 80]
[inlinecmt, //3.1,5.1, 80]
[id, result, 81]
[equal, =, 81]
[id, result, 81]
[mult, *, 81]
[id, x, 81]
[plus, +, 81]
[id, c, 81]
[semi, ;, 81]
[inlinecmt, //3.1,5.1, 81]
[return, return, 82]
[lpar, (, 82]
[id, result, 82]
[rpar, ), 82]
[semi, ;, 82]
[inlinecmt, //2.3, 82]
[rcurbr, }, 83]
[inlinecmt, //2.1,2.2, 85]
[function, function, 86]
[id, QUADRATIC, 86]
[sr, ::, 86]
[constructor, constructor, 86]
[lpar, (, 86]
[id, A, 86]
[colon, :, 86]
[float, float, 86]
[comma, ,, 86]
[id, B, 86]
[colon, :, 86]
[float, float, 86]
[comma, ,, 86]
[id, C, 86]
[colon, :, 86]
[float, float, 86]
[rpar, ), 86]
[lcurbr, {, 87]
[id, self, 88]
[dot, ., 88]
[id, a, 88]
[equal, =, 88]
[id, A, 88]
[semi, ;, 88]
[inlinecmt, //3.1,5.3, 88]
[id, self, 89]
[dot, ., 89]
[id, b, 89]
[equal, =, 89]
[id, B, 89]
[semi, ;, 89]
[inlinecmt, //3.1,5.3, 89]
[id, self, 90]
[dot, ., 90]
[id, c, 90]
[equal, =, 90]
[id, C, 90]
[semi, ;, 90]
[inlinecmt, //3.1,5.3, 90]
[rcurbr, }, 91]
[inlinecmt, //2.1,2.2, 93]
[function, function, 94]
[id, LINEAR, 94]
[sr, ::, 94]
[constructor, constructor, 94]
[lpar, (, 94]
[id, A, 94]
[colon, :, 94]
[float, float, 94]
[comma, ,, 94]
[id, B, 94]
[colon, :, 94]
[float, float, 94]
[rpar, ), 94]
[lcurbr, {, 95]
[id, self, 96]
[dot, ., 96]
[id, a, 96]
[equal, =, 96]
[id, A, 96]
[semi, ;, 96]
[inlinecmt, //3.1,5.3, 96]
[id, self, 97]
[dot, ., 97]
[id, b, 97]
[equal, =, 97]
[id, B, 97]
[semi, ;, 97]
[inlinecmt, //3.1,5.3, 97]
[rcurbr, }, 98]
[inlinecmt, //2.1,2.2, 100]
[function, function, 101]
[id, LINEAR, 101]
[sr, ::, 101]
[id, evaluate, 101]
[lpar, (, 101]
[id, x, 101]
[colon, :, 101]
[float, float, 101]
[rpar, ), 101]
[arrow, =>, 101]
[float, float, 101]
[lcurbr, {, 102]
[localvar, localvar, 103]
[id, result, 103]
[colon, :, 103]
[float, float, 103]
[semi, ;, 103]
[inlinecmt, //1.1, 103]
[id, result, 104]
[equal, =, 104]
[floatlit, 0.0, 104]
[semi, ;, 104]
[inlinecmt, //3.1, 104]
[id, result, 105]
[equal, =, 105]
[id, a, 105]
[mult, *, 105]
[id, x, 105]
[plus, +, 105]
[id, b, 105]
[semi, ;, 105]
[inlinecmt, //3.1,5.1, 105]
[return, return, 106]
[lpar, (, 106]
[id, result, 106]
[rpar, ), 106]
[semi, ;, 106]
[inlinecmt, //2.3, 106]
[rcurbr, }, 107]
[inlinecmt, //======main======//, 109]
[inlinecmt, //2.1,2.2, 110]
[function, function, 111]
[id, main, 111]
[lpar, (, 111]
[rpar, ), 111]
[arrow, =>, 111]
[void, void, 111]
[lcurbr, {, 112]
[localvar, localvar, 113]
[id, f1, 113]
[colon, :, 113]
[id, LINEAR, 113]
[lpar, (, 113]
[intlit, 2, 113]
[comma, ,, 113]
[floatlit, 3.5, 113]
[rpar, ), 113]
[semi, ;, 113]
[inlinecmt, //1.3,2.1,2.2,2.4, 113]
[localvar, localvar, 114]
[id, f2, 114]
[colon, :, 114]
[id, QUADRATIC, 114]
[lpar, (, 114]
[minus, -, 114]
[floatlit, 2.0, 114]
[comma, ,, 114]
[floatlit, 1.0, 114]
[comma, ,, 114]
[floatlit, 0.0, 114]
[rpar, ), 114]
[semi, ;, 114]
[inlinecmt, //1.3,2.1,2.2,2.4, 114]
[localvar, localvar, 115]
[id, counter, 115]
[colon, :, 115]
[integer, integer, 115]
[semi, ;, 115]
[inlinecmt, //1.1, 115]
[id, counter, 117]
[equal, =, 117]
[intlit, 1, 117]
[semi, ;, 117]
[inlinecmt, //3.1, 117]
[while, while, 119]
[lpar, (, 119]
[id, counter, 119]
[leq, <=, 119]
[intlit, 10, 119]
[rpar, ), 119]
[inlinecmt, //3.3,5.1, 119]
[lcurbr, {, 120]
[write, write, 121]
[lpar, (, 121]
[id, counter, 121]
[rpar, ), 121]
[semi, ;, 121]
[inlinecmt, //3.4, 121]
[write, write, 122]
[lpar, (, 122]
[id, f1, 122]
[dot, ., 122]
[id, evaluate, 122]
[lpar, (, 122]
[id, counter, 122]
[rpar, ), 122]
[rpar, ), 122]
[semi, ;, 122]
[inlinecmt, //3.4,2.1,2.2,2.4, 122]
[write, write, 123]
[lpar, (, 123]
[id, f2, 123]
[dot, ., 123]
[id, evaluate, 123]
[lpar, (, 123]
[id, counter, 123]
[rpar, ), 123]
[rpar, ), 123]
[semi, ;, 123]
[inlinecmt, //3.4,2.1,2.2,2.4, 123]
[id, counter, 124]
[equal, =, 124]
[id, counter, 124]
[plus, +, 124]
[intlit, 1, 124]
[semi, ;, 124]
[inlinecmt, //3.1, 124]
[rcurbr, }, 125]
[semi, ;, 125]
[rcurbr, }, 126]
