[blockcmt, /*1.1Allocatememoryforbasictypes(integer,float).1.2Allocatememoryforarraysofbasictypes.1.3Allocatememoryforobjects.1.4Allocatememoryforarraysofobjects.2.1Branchtoafunction’scodeblock,executethecodeblock,branchbacktothecallingfunction.2.2Passparametersaslocalvaluestothefunction’scodeblock.2.3Uponexecutionofareturnstatement,passthereturnvaluebacktothecallingfunction.2.4Calltomemberfunctionsthatcanusetheirobject’sdatamembers.3.1Assignmentstatement:assignmentoftheresultingvalueofanexpressiontoavariable,independentlyofwhatistheexpressiontotherightoftheassignmentoperator.3.2Conditionalstatement:implementationofabranchingmechanism.3.3Loopstatement:implementationofabranchingmechanism.3.4Input/outputstatement:Moonmachinekeyboardinput/consoleoutput4.1.Forarraysofbasictypes(integerandfloat),accesstoanarray’selements.4.2.Forarraysofobjects,accesstoanarray’selement’sdatamembers.4.3.Forobjects,accesstomembersofbasictypes.4.4.Forobjects,accesstomembersofarrayorobjecttypes.5.1.Computingthevalueofanentirecomplexexpression.5.2.Expressioninvolvinganarrayfactorwhoseindexesarethemselvesexpressions.5.3.Expressioninvolvinganobjectfactorreferringtoobjectmembers.*/, 21]
[inlinecmt, //Assignment5coverage:, 23]
[inlinecmt, //-------------, 24]
[inlinecmt, //|YES|NO|, 25]
[inlinecmt, //-------------, 26]
[inlinecmt, //1.1:|X||, 27]
[inlinecmt, //1.2:|X||, 28]
[inlinecmt, //1.3:||X|, 29]
[inlinecmt, //1.4:||X|, 30]
[inlinecmt, //2.1:|X||, 31]
[inlinecmt, //2.2:|X||, 32]
[inlinecmt, //2.3:||X|, 33]
[inlinecmt, //2.4:||X|, 34]
[inlinecmt, //3.1:|X||, 35]
[inlinecmt, //3.2:|X||, 36]
[inlinecmt, //3.3:|X||, 37]
[inlinecmt, //3.4:|X||, 38]
[inlinecmt, //4.1:|X||, 39]
[inlinecmt, //4.2:||X|, 40]
[inlinecmt, //4.3:||X|, 41]
[inlinecmt, //4.4:||X|, 42]
[inlinecmt, //5.1:|X||, 43]
[inlinecmt, //5.2:|X||, 44]
[inlinecmt, //5.3:||X|, 45]
[inlinecmt, //-------------, 46]
[blockcmt, /*sortthearray*/, 48]
[inlinecmt, //2.1,2.2, 49]
[function, function, 50]
[id, bubbleSort, 50]
[lpar, (, 50]
[id, arr, 50]
[colon, :, 50]
[integer, integer, 50]
[lsqbr, [, 50]
[rsqbr, ], 50]
[comma, ,, 50]
[id, size, 50]
[colon, :, 50]
[integer, integer, 50]
[rpar, ), 50]
[arrow, =>, 50]
[void, void, 50]
[lcurbr, {, 51]
[localvar, localvar, 52]
[id, n, 52]
[colon, :, 52]
[integer, integer, 52]
[semi, ;, 52]
[inlinecmt, //1.1, 52]
[localvar, localvar, 53]
[id, i, 53]
[colon, :, 53]
[integer, integer, 53]
[semi, ;, 53]
[inlinecmt, //1.1, 53]
[localvar, localvar, 54]
[id, j, 54]
[colon, :, 54]
[integer, integer, 54]
[semi, ;, 54]
[inlinecmt, //1.1, 54]
[localvar, localvar, 55]
[id, temp, 55]
[colon, :, 55]
[integer, integer, 55]
[semi, ;, 55]
[inlinecmt, //1.1, 55]
[id, n, 56]
[equal, =, 56]
[id, size, 56]
[semi, ;, 56]
[inlinecmt, //3.1, 56]
[id, i, 57]
[equal, =, 57]
[intlit, 0, 57]
[semi, ;, 57]
[inlinecmt, //3.1, 57]
[id, j, 58]
[equal, =, 58]
[intlit, 0, 58]
[semi, ;, 58]
[inlinecmt, //3.1, 58]
[id, temp, 59]
[equal, =, 59]
[intlit, 0, 59]
[semi, ;, 59]
[inlinecmt, //3.1, 59]
[while, while, 60]
[lpar, (, 60]
[id, i, 60]
[lt, <, 60]
[id, n, 60]
[minus, -, 60]
[intlit, 1, 60]
[rpar, ), 60]
[lcurbr, {, 60]
[inlinecmt, //3.3,5.1, 60]
[id, j, 61]
[equal, =, 61]
[intlit, 0, 61]
[semi, ;, 61]
[inlinecmt, //3.1, 61]
[while, while, 62]
[lpar, (, 62]
[id, j, 62]
[lt, <, 62]
[id, n, 62]
[minus, -, 62]
[id, i, 62]
[minus, -, 62]
[intlit, 1, 62]
[rpar, ), 62]
[lcurbr, {, 62]
[inlinecmt, //3.3, 62]
[if, if, 63]
[lpar, (, 63]
[id, arr, 63]
[lsqbr, [, 63]
[id, j, 63]
[rsqbr, ], 63]
[gt, >, 63]
[id, arr, 63]
[lsqbr, [, 63]
[id, j, 63]
[plus, +, 63]
[intlit, 1, 63]
[rsqbr, ], 63]
[rpar, ), 63]
[inlinecmt, //3.2,4.1,5.1,5.2, 63]
[then, then, 64]
[lcurbr, {, 64]
[inlinecmt, //swaptempandarr[i], 65]
[id, temp, 66]
[equal, =, 66]
[id, arr, 66]
[lsqbr, [, 66]
[id, j, 66]
[rsqbr, ], 66]
[semi, ;, 66]
[inlinecmt, //3.1,4.1,5.2, 66]
[id, arr, 67]
[lsqbr, [, 67]
[id, j, 67]
[rsqbr, ], 67]
[equal, =, 67]
[id, arr, 67]
[lsqbr, [, 67]
[id, j, 67]
[plus, +, 67]
[intlit, 1, 67]
[rsqbr, ], 67]
[semi, ;, 67]
[inlinecmt, //3.1,4.1,5.2, 67]
[id, arr, 68]
[lsqbr, [, 68]
[id, j, 68]
[plus, +, 68]
[intlit, 1, 68]
[rsqbr, ], 68]
[equal, =, 68]
[id, temp, 68]
[semi, ;, 68]
[inlinecmt, //3.1,4.1,5.2, 68]
[rcurbr, }, 69]
[else, else, 69]
[semi, ;, 69]
[id, j, 70]
[equal, =, 70]
[id, j, 70]
[plus, +, 70]
[intlit, 1, 70]
[semi, ;, 70]
[inlinecmt, //3.1,5.1, 70]
[rcurbr, }, 71]
[semi, ;, 71]
[id, i, 72]
[equal, =, 72]
[id, i, 72]
[plus, +, 72]
[intlit, 1, 72]
[semi, ;, 72]
[inlinecmt, //3.1,5.1, 72]
[rcurbr, }, 73]
[semi, ;, 73]
[rcurbr, }, 74]
[blockcmt, /*printthearray*/, 76]
[inlinecmt, //2.1,2.2, 77]
[function, function, 78]
[id, printArray, 78]
[lpar, (, 78]
[id, arr, 78]
[colon, :, 78]
[integer, integer, 78]
[lsqbr, [, 78]
[rsqbr, ], 78]
[comma, ,, 78]
[id, size, 78]
[colon, :, 78]
[integer, integer, 78]
[rpar, ), 78]
[arrow, =>, 78]
[void, void, 78]
[lcurbr, {, 79]
[localvar, localvar, 80]
[id, n, 80]
[colon, :, 80]
[integer, integer, 80]
[semi, ;, 80]
[inlinecmt, //1.1, 80]
[localvar, localvar, 81]
[id, i, 81]
[colon, :, 81]
[integer, integer, 81]
[semi, ;, 81]
[inlinecmt, //1.1, 81]
[id, n, 82]
[equal, =, 82]
[id, size, 82]
[semi, ;, 82]
[inlinecmt, //3.1, 82]
[id, i, 83]
[equal, =, 83]
[intlit, 0, 83]
[semi, ;, 83]
[inlinecmt, //3.1, 83]
[while, while, 84]
[lpar, (, 84]
[id, i, 84]
[lt, <, 84]
[id, n, 84]
[rpar, ), 84]
[lcurbr, {, 84]
[inlinecmt, //3.3,5.1, 84]
[write, write, 85]
[lpar, (, 85]
[id, arr, 85]
[lsqbr, [, 85]
[id, i, 85]
[rsqbr, ], 85]
[rpar, ), 85]
[semi, ;, 85]
[inlinecmt, //3.4,4.1,5.2, 85]
[id, i, 86]
[equal, =, 86]
[id, i, 86]
[plus, +, 86]
[intlit, 1, 86]
[semi, ;, 86]
[inlinecmt, //3.1,5.1, 86]
[rcurbr, }, 87]
[semi, ;, 87]
[rcurbr, }, 88]
[inlinecmt, //mainfuntiontotestabove, 90]
[function, function, 91]
[id, main, 91]
[lpar, (, 91]
[rpar, ), 91]
[arrow, =>, 91]
[void, void, 91]
[lcurbr, {, 92]
[localvar, localvar, 93]
[id, arr, 93]
[colon, :, 93]
[integer, integer, 93]
[lsqbr, [, 93]
[intlit, 7, 93]
[rsqbr, ], 93]
[semi, ;, 93]
[inlinecmt, //1.1, 93]
[id, arr, 94]
[lsqbr, [, 94]
[intlit, 0, 94]
[rsqbr, ], 94]
[equal, =, 94]
[intlit, 64, 94]
[semi, ;, 94]
[inlinecmt, //3.1, 94]
[id, arr, 95]
[lsqbr, [, 95]
[intlit, 1, 95]
[rsqbr, ], 95]
[equal, =, 95]
[intlit, 34, 95]
[semi, ;, 95]
[inlinecmt, //3.1, 95]
[id, arr, 96]
[lsqbr, [, 96]
[intlit, 2, 96]
[rsqbr, ], 96]
[equal, =, 96]
[intlit, 25, 96]
[semi, ;, 96]
[inlinecmt, //3.1, 96]
[id, arr, 97]
[lsqbr, [, 97]
[intlit, 3, 97]
[rsqbr, ], 97]
[equal, =, 97]
[intlit, 12, 97]
[semi, ;, 97]
[inlinecmt, //3.1, 97]
[id, arr, 98]
[lsqbr, [, 98]
[intlit, 4, 98]
[rsqbr, ], 98]
[equal, =, 98]
[intlit, 22, 98]
[semi, ;, 98]
[inlinecmt, //3.1, 98]
[id, arr, 99]
[lsqbr, [, 99]
[intlit, 5, 99]
[rsqbr, ], 99]
[equal, =, 99]
[intlit, 11, 99]
[semi, ;, 99]
[inlinecmt, //3.1, 99]
[id, arr, 100]
[lsqbr, [, 100]
[intlit, 6, 100]
[rsqbr, ], 100]
[equal, =, 100]
[intlit, 90, 100]
[semi, ;, 100]
[inlinecmt, //3.1, 100]
[id, printArray, 101]
[lpar, (, 101]
[id, arr, 101]
[comma, ,, 101]
[intlit, 7, 101]
[rpar, ), 101]
[semi, ;, 101]
[inlinecmt, //2.1,2.2, 101]
[blockcmt, /*assumesthatthearrayispassedasareference*/, 102]
[id, bubbleSort, 103]
[lpar, (, 103]
[id, arr, 103]
[comma, ,, 103]
[intlit, 7, 103]
[rpar, ), 103]
[semi, ;, 103]
[inlinecmt, //2.1,2.2, 103]
[id, printArray, 104]
[lpar, (, 104]
[id, arr, 104]
[comma, ,, 104]
[intlit, 7, 104]
[rpar, ), 104]
[semi, ;, 104]
[inlinecmt, //2.1,2.2, 104]
[rcurbr, }, 105]
